\documentclass[a4paper,10pt]{article}
\usepackage[utf8]{inputenc}

\usepackage{listings}

\documentclass{article}
\usepackage{graphicx}

\lstset{
numbers=left, 
numberstyle=\small, 
numbersep=8pt, 
frame = single, 
language=Pascal, 
framexleftmargin=15pt}


%opening
\title{}
\author{Maria Kesa}

\begin{document}
\title{Simulating synaptic currents}
\maketitle

\section{Simulations}

The aim this week is to get familiar with the basic syntax in the Brian spiking neural network simulator (Python) and implement a simple model, without the attempt to capture biological realism. We create a layer of input neurons spiking according to Poisson statistics. Each neuron in the layer is connected to one neuron in the layer above it via excitatory AMPAR synapses. We then observe the spiking patterns in this upper layer of isolated neurons. 

Brian permits to explicitly write down the differential equations describing voltage fluctuations in response to synaptic inputs for simulation. The dynamics governing a synaptic current is given by the following equation:
\[I_{syn}(t)=g_{syn}(t)s(t)(V(t)-E_{syn})\]
where \(I\) is the current, \(g\) is the synaptic conductance, \(s\) is the gating variable representing the fraction of open channels, \(V\) is the voltage and \(E\) is the reversal potential of the ions passing through the synapse. This equation describes how  neurotransmitter binding to post-synaptic receptors results in a current due to the conductance of synaptic ion channels. The current is driven by the difference of the membrane voltage from the reversal potential of the ion that the channel is permeable to. 

In Brian this equation is written in the following form:

\begin{lstlisting}
eqs_i='''
dv/dt=(-gl_i*(v-El_i)-g_ext_i*s_ext*(v-E_ampa))/Cm_i: volt
ds_ext/dt=-s_ext/t_ampa : 1
'''
\end{lstlisting}

In this initial simulation we have a synaptic current corresponding to the AMPA channels and also a leak current modeling all other inputs. The equations also encompass the dynamics of the gating variable that here are given the simplest possible form, corresponding to an exponential decay with a time constant \(t_ampa\). The constants in the equation are set separately like this:

\begin{lstlisting}

nr_of_neurons=10
t_ampa=2*ms
gl_i=25*nS
El_i = -70*mV
E_ampa=0*mV
g_ext_i=3.1*nS
Cm_i=0.5*nF
Vth_i=-50*mV
Vr_i=-60*mV
tr_i = 2*ms
fext=1.8*kHz

\end{lstlisting}

We can now define two neuron groups in the simulation:

\begin{lstlisting}
neurons = NeuronGroup(nr_of_neurons, eqs_i,
threshold=Vth_i, reset=Vr_i,refractory=tr_i)

inputs = PoissonGroup(nr_of_neurons,fext)

input_connections = IdentityConnection(inputs,neurons,
's_ext',weight=1.0)
\end{lstlisting}

Finally we simulate and plot:

\begin{lstlisting}
M = SpikeMonitor(neurons)

run(500*ms)

raster_plot(M)
\end{lstlisting}

The resulting random firing patterns of the 10 neurons in the simulation are given below. 

\includegraphics[scale=0.5]{figure_1.png}

\section{Conclusion}

This week's report was devoted to basic commands in Brian needed to get a simulation running, without thinking 
about biological details. We learned how to define equations for modeling synaptic input currents and creating 
neuron groups to follow these equations. We saw how to connect neuron groups together using synapses.

Next week's report will be devoted to adding non-linear NMDA channels to the simulations. 

Thank you for reading:-)!

\end{document}
